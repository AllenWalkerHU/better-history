// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  BH.Collections.Visits = (function(_super) {

    __extends(Visits, _super);

    Visits.name = 'Visits';

    function Visits() {
      return Visits.__super__.constructor.apply(this, arguments);
    }

    Visits.prototype.model = BH.Models.Visit;

    Visits.prototype.destroyAll = function(options) {
      while (this.length > 0) {
        if (this.at(0)) {
          this.at(0).destroy();
        }
      }
      if (options != null) {
        return options.success();
      }
    };

    Visits.prototype.toTemplate = function() {
      var visits;
      visits = [];
      this.each(function(model) {
        return visits.push(model.toTemplate());
      });
      return {
        visits: visits,
        noVisits: this.noVisits(),
        hasVisits: this.hasVisits()
      };
    };

    Visits.prototype.noVisits = function() {
      if (this.models.length === 0) {
        return true;
      } else {
        return false;
      }
    };

    Visits.prototype.hasVisits = function() {
      return !this.noVisits();
    };

    return Visits;

  })(Backbone.Collection);

}).call(this);
