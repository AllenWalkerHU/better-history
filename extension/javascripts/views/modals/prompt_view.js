// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  BH.Views.PromptView = (function(_super) {

    __extends(PromptView, _super);

    PromptView.name = 'PromptView';

    function PromptView() {
      return PromptView.__super__.constructor.apply(this, arguments);
    }

    PromptView.prototype.className = 'prompt_view';

    PromptView.prototype.templateId = 'prompt';

    PromptView.prototype.events = {
      'click .no': 'clickedNo',
      'click .yes': 'clickedYes'
    };

    PromptView.prototype.initialize = function() {
      return this.attachGeneralEvents();
    };

    PromptView.prototype.render = function() {
      this.$el.html(this.template(this.model.toTemplate()));
      return this;
    };

    PromptView.prototype.clickedNo = function(ev) {
      ev.preventDefault();
      return this.model.set({
        action: false
      });
    };

    PromptView.prototype.clickedYes = function(ev) {
      ev.preventDefault();
      return this.model.set({
        action: true
      });
    };

    PromptView.prototype.spin = function() {
      var _this = this;
      return this.$('button').animate({
        opacity: 0
      }, 'fast', function() {
        _this.$('.spinner').spin();
        return _this.$('.close-button').fadeOut();
      });
    };

    return PromptView;

  })(BH.Views.Modal);

  BH.Views.CreatePrompt = function(content) {
    var view;
    view = new BH.Views.PromptView({
      model: new BH.Models.Prompt({
        content: content
      })
    });
    $('body').append(view.render().el);
    return view;
  };

}).call(this);
