// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  BH.Views.ViewWithSearch = (function(_super) {

    __extends(ViewWithSearch, _super);

    ViewWithSearch.name = 'ViewWithSearch';

    function ViewWithSearch() {
      return ViewWithSearch.__super__.constructor.apply(this, arguments);
    }

    ViewWithSearch.prototype.initialize = function() {
      return this.events = _.extend(this.events, {
        'keyup .search': 'searchTyped',
        'blur .search': 'searchBlurred'
      });
    };

    ViewWithSearch.prototype.searchTyped = function(ev) {
      var term;
      term = this._trimedSearchTerm();
      if (ev.keyCode === 13 && term !== '') {
        return router.navigate('search/' + term, true);
      }
    };

    ViewWithSearch.prototype.searchBlurred = function() {
      return this.$('.search').val(this._trimedSearchTerm());
    };

    ViewWithSearch.prototype._trimedSearchTerm = function() {
      return $.trim(this.$('.search').val());
    };

    return ViewWithSearch;

  })(BH.Views.BaseView);

}).call(this);
