// Generated by CoffeeScript 1.3.1
(function() {

  BH.Lib.SelectionContextMenu = (function() {

    SelectionContextMenu.name = 'SelectionContextMenu';

    function SelectionContextMenu() {}

    SelectionContextMenu.prototype.create = function() {
      return this.menu = chrome.contextMenus.create({
        title: chrome.i18n.getMessage('search_in_history'),
        contexts: ['selection'],
        onclick: this.onClick
      });
    };

    SelectionContextMenu.prototype.onClick = function(data) {
      return chrome.tabs.create({
        url: "" + (BH.Lib.Url.base()) + (BH.Lib.Url.search(data.selectionText))
      });
    };

    SelectionContextMenu.prototype.remove = function() {
      chrome.contextMenus.remove(this.menu);
      return delete this.menu;
    };

    return SelectionContextMenu;

  })();

  BH.Lib.PageContextMenu = (function() {

    PageContextMenu.name = 'PageContextMenu';

    function PageContextMenu() {}

    PageContextMenu.prototype.create = function() {
      return this.menu = chrome.contextMenus.create({
        title: chrome.i18n.getMessage('visits_to_domain', ['domain']),
        contexts: ['page'],
        onclick: this.onClick
      });
    };

    PageContextMenu.prototype.onClick = function(data) {
      return chrome.tabs.create({
        url: "" + (BH.Lib.Url.base()) + (BH.Lib.Url.search(Helpers.getDomain(data.pageUrl)[1]))
      });
    };

    PageContextMenu.prototype.updateTitleDomain = function(tab) {
      return chrome.contextMenus.update(this.menu, {
        title: chrome.i18n.getMessage('visits_to_domain', [Helpers.getDomain(tab.url)[1]])
      });
    };

    PageContextMenu.prototype.listenToTabs = function() {
      var _this = this;
      chrome.tabs.onSelectionChanged.addListener(function(tabId) {
        if (_this.menu) {
          return _this.onTabSelectionChanged(tabId);
        }
      });
      return chrome.tabs.onUpdated.addListener(function(tabId, changedInfo, tab) {
        if (_this.menu) {
          return _this.onTabUpdated(tab);
        }
      });
    };

    PageContextMenu.prototype.onTabSelectionChanged = function(tabId) {
      var _this = this;
      return chrome.tabs.get(tabId, function(tab) {
        return _this.updateTitleDomain(tab);
      });
    };

    PageContextMenu.prototype.onTabUpdated = function(tab) {
      if (tab.selected) {
        return this.updateTitleDomain(tab);
      }
    };

    PageContextMenu.prototype.remove = function() {
      chrome.contextMenus.remove(this.menu);
      return delete this.menu;
    };

    return PageContextMenu;

  })();

}).call(this);
